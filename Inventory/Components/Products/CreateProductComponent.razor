@using Entities
@using Business

@inject B_Product bProduct
@inject B_Category bCategory

@inject NavigationManager NavManager

<div>
    <EditForm Model="oProduct">
        <div class="form-group">
            <label>Referencia:</label>
            <InputText @bind-Value="oProduct.ProductId" class="form-control" />
        </div>

        <div class="form-group">
            <label>Nombre de producto:</label>
            <InputText @bind-Value="oProduct.ProductName" class="form-control" />
        </div>

        <div class="form-group">
            <label>Descripción:</label>
            <InputTextArea @bind-Value="oProduct.ProductDescription" class="form-control" />
        </div>
        <div class="form-group">
            <label>Categoría:</label>
            <InputSelect @bind-Value="oProduct.CategoryId" class="form-control">
                <option>Seleccione una categoria:</option>
                @foreach (var category in categories)
                {
                    <option value="@category.CategoryId">@category.CategoryName</option>
                }
            </InputSelect>
        </div>
            <input type="button"  value="Agregar producto" @onclick="SaveProduct" class="btn-primary"/>
    </EditForm>
</div>


@code {
    ProductEntity oProduct = new ProductEntity();
    List<CategoryEntity> categories = new List<CategoryEntity>();

    protected override async Task OnInitializedAsync()
    {
        categories = bCategory.CategoryList();
    }

    private void SaveProduct()
    {
        bProduct.CreateProduct(oProduct);
        NavManager.NavigateTo("product/list");
    }

}
